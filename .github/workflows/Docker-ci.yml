name: k8s 코드 동기화

on:
  # 코드 변경 시 자동 실행
  push:
    branches: [ main, master ]
    paths:
      - 'Docker/**'  # Docker 폴더의 변경사항 감지
  # 수동으로 실행 가능
  workflow_dispatch:

jobs:
  deploy-ansible:
    name: Docker 코드 배포
    runs-on: self-hosted
    
    steps:
      - name: 코드 체크아웃
        uses: actions/checkout@v3

      - name: 환경 변수 설정
        run: |
          echo "DB_PASSWORD=soldesk1." >> $GITHUB_ENV
          echo "AWX_PASSWORD=redhat" >> $GITHUB_ENV
          echo "DB_SERVER=192.168.60.64" >> $GITHUB_ENV
          echo "ANSIBLE_MASTER=192.168.50.11" >> $GITHUB_ENV
          echo "DB_ANSIBLE_PATH=/var/lib/pgsql/data/service_templates/Docker" >> $GITHUB_ENV
          
      - name: sshpass 설치 확인
        run: |
          if ! command -v sshpass &> /dev/null; then
            echo "sshpass 설치 중..."
            sudo dnf install -y epel-release
            sudo dnf install -y sshpass
          else
            echo "sshpass가 이미 설치되어 있습니다."
          fi
          
      - name: PostgreSQL 서버에서 Docker 정보 조회
        run: |
          echo "PostgreSQL에서 Docker 배포 정보 가져오는 중..."
          
          SERVICE_INFO=$(sshpass -p "${{ env.DB_PASSWORD }}" ssh -o StrictHostKeyChecking=no postgres@${{ env.DB_SERVER }} \
            "psql -d solmakasedb -t -c \"SELECT name, deploy_script FROM servicetemplate WHERE name = 'Docker';\"")
          echo "k8s 서비스 정보:"
          echo "$SERVICE_INFO"
          
      - name: Docker 코드 동기화
        run: |
          echo "Ansible 코드를 NAS 경로에 동기화 중..."
          
          # 임시 디렉토리 이름을 일관되게 사용
          TEMP_DIR="/tmp/lb-web_temp"
          
          # 로컬 ansible 폴더를 DB 서버의 NAS 경로에 동기화 (sudo 권한 사용)
          sshpass -p "${{ env.DB_PASSWORD }}" ssh -o StrictHostKeyChecking=no postgres@${{ env.DB_SERVER }} \
            "echo '${{ env.DB_PASSWORD }}' | sudo -S mkdir -p ${{ env.DB_ANSIBLE_PATH }} && mkdir -p ${TEMP_DIR}"
          
          # rsync로 파일 전송 후 원격에서 sudo로 권한 변경
          sshpass -p "${{ env.DB_PASSWORD }}" rsync -avz --delete ./Docker/ postgres@${{ env.DB_SERVER }}:${TEMP_DIR}/
          
          sshpass -p "${{ env.DB_PASSWORD }}" ssh -o StrictHostKeyChecking=no postgres@${{ env.DB_SERVER }} \
            "echo '${{ env.DB_PASSWORD }}' | sudo -S rsync -avz --delete ${TEMP_DIR}/ ${{ env.DB_ANSIBLE_PATH }}/ && \
             echo '${{ env.DB_PASSWORD }}' | sudo -S chown -R postgres:postgres ${{ env.DB_ANSIBLE_PATH }} && \
             rm -rf ${TEMP_DIR}"
          
          echo "Docker 코드 동기화 완료"
          
      - name: 배포 완료 알림
        run: |
          echo "================================================="
          echo "✅ Docker 코드 배포가 완료되었습니다!"
          echo "   배포 경로: ${{ env.DB_SERVER }}:${{ env.DB_ANSIBLE_PATH }}"
          echo "================================================="
